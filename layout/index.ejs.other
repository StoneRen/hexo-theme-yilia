layout: false
permalink: /landing
---
<title>StoneRen     -- 让网络为人们提供更大的便捷</title>
<meta charset="utf-8">
<style>
  body {
    color: #ffffff;
    font-family: "Helvetica Neue",Helvetica,"PingFang SC","Hiragino Sans GB","Microsoft YaHei","微软雅黑",Arial,sans-serif;
    font-size: 20px;
    text-align: center;
    font-weight: bold;
    background-color: #000000;
    margin: 0px;
    overflow: hidden;
  }
  #info {
    position: absolute;
    top: 30%;
    width: 100%;
    padding: 5px;
  }
  a {
    color: #ffffff;
  }
  #oldie a {
    color: #da0;
  }
  #notSupported {
    width: 50%;
    margin: auto;
    border: 2px red solid;
    margin-top: 20px;
    padding: 10px;
  }
  header .avatar {
    border: 5px solid #fff;
    border-radius: 300px;
    width: 128px;
    height: 128px;
    margin: 0 auto;
    position: relative;
    overflow: hidden;
    background: #88acdb;
    -webkit-transition: all 0.2s ease-in;
    display: -webkit-box;
    -webkit-box-orient: horizontal;
    -webkit-box-pack: center;
    -webkit-box-align: center;
    text-align: center;
  }
  header .avatar img {
    border: 0;
    vertical-align: middle;
    max-width: 100%;
    border-radius: 300px;
    opacity: 1;
    -webkit-transition: all 0.2s ease-in;
  }
</style>

<div id="info">
  <header>
    <a class="avatar" href="/">
      <img src="https://avatars0.githubusercontent.com/u/2187168?v=3&amp;s=460">
    </a>
    <center>
      <a href="/archives/">https://stoneren.github.io</a>
      <p>深山磨石 只为寻玉</p>
      <p>让网络为人们提供更大的便捷</p>
      <p>
        <a href="/archives/">文章</a>
        <a href="/photo/">记录</a>
        <a href="/book/">读书</a>
      </p>
    </center>
  </header>
</div>
<div id="container"></div>
<script src="https://cdn.staticfile.org/three.js/r83/three.min.js"></script>
<script src="https://threejs.org/examples/js/renderers/Projector.js"></script>
<script src="https://threejs.org/examples/js/renderers/CanvasRenderer.js"></script>

<script>
 var container;
 var camera, scene, renderer, group, particle;
 var mouseX = 0,
   mouseY = 0;
 var windowHalfX = window.innerWidth / 2;
 var windowHalfY = window.innerHeight / 2;
 init();
 animate();
 function init() {
   container = document.createElement('div');
   document.body.appendChild(container);
   camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 3000);
   camera.position.z = 1000;
   scene = new THREE.Scene();
   var PI2 = Math.PI * 2;
   var program = function(context) {
     context.beginPath();
     context.arc(0, 0, 0.5, 0, PI2, true);
     context.fill();
   };
   group = new THREE.Group();
   scene.add(group);
   for (var i = 0; i < 1000; i++) {
     var material = new THREE.SpriteCanvasMaterial({
       color: Math.random() * 0x808008 + 0x808080,
       program: program
     });
     particle = new THREE.Sprite(material);
     particle.position.x = Math.random() * 2000 - 1000;
     particle.position.y = Math.random() * 2000 - 1000;
     particle.position.z = Math.random() * 2000 - 1000;
     particle.scale.x = particle.scale.y = Math.random() * 20 + 10;
     group.add(particle);
   }
   renderer = new THREE.CanvasRenderer();
   renderer.setPixelRatio(window.devicePixelRatio);
   renderer.setSize(window.innerWidth, window.innerHeight);
   container.appendChild(renderer.domElement);
   document.addEventListener('mousemove', onDocumentMouseMove, false);
   document.addEventListener('touchstart', onDocumentTouchStart, false);
   document.addEventListener('touchmove', onDocumentTouchMove, false);
   //
   window.addEventListener('resize', onWindowResize, false);
 }

 function onWindowResize() {
   windowHalfX = window.innerWidth / 2;
   windowHalfY = window.innerHeight / 2;
   camera.aspect = window.innerWidth / window.innerHeight;
   camera.updateProjectionMatrix();
   renderer.setSize(window.innerWidth, window.innerHeight);
 }
 //
 function onDocumentMouseMove(event) {
   mouseX = event.clientX - windowHalfX;
   mouseY = event.clientY - windowHalfY;
 }

 function onDocumentTouchStart(event) {
   if (event.touches.length === 1) {
     event.preventDefault();
     mouseX = event.touches[0].pageX - windowHalfX;
     mouseY = event.touches[0].pageY - windowHalfY;
   }
 }

 function onDocumentTouchMove(event) {
   if (event.touches.length === 1) {
     event.preventDefault();
     mouseX = event.touches[0].pageX - windowHalfX;
     mouseY = event.touches[0].pageY - windowHalfY;
   }
 }
 //
 function animate() {
   requestAnimationFrame(animate);
   render();
 }

 function render() {
   camera.position.x += (mouseX - camera.position.x) * 0.05;
   camera.position.y += (-mouseY - camera.position.y) * 0.05;
   camera.lookAt(scene.position);
   group.rotation.x += 0.001;
   group.rotation.y += 0.002;
   renderer.render(scene, camera);
 }
</script>
